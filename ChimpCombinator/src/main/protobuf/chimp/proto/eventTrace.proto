syntax = "proto2";

package chimp.protobuf;

import public "chimp/proto/appEvent.proto";
import public "chimp/proto/extEvent.proto";

// PrimEvent = AppEvent | ExtEvent
// Condition = PrimEvent
// Alternatives = Condition ==> EventTrace
// EventTrace = PrimEvent | Try PrimEvent | Decide Condition EventTrace EvenTrace | EventTrace |:| EventTrace
//            | DecideMany [Alternatives]

message EventTrace {
  repeated UIEvent events = 1;
}

message UIEvent {
  enum UIEventType {
    APPEVENT = 1;
    EXTEVENT = 2;
    TRYEVENT = 3;
    DECIDE   = 4;
    DECIDEMANY = 5;
  }
  required UIEventType eventType = 1;
  optional AppEvent appEvent = 2;
  optional ExtEvent extEvent = 3;
  optional TryEvent tryEvent = 4;
  optional Decide decide = 5;
  optional DecideMany decideMany = 6;
}

message TryEvent {
  enum TryType {
     APPEVENT = 1;
     EXTEVENT = 2;
  }
  required TryType tryType   = 1;
  optional AppEvent appEvent = 2;
  optional ExtEvent extEvent = 3;
}

message Decide {
  required Condition testCond = 1;
  required EventTrace succTrace = 2;
  required EventTrace failTrace = 3;
}

message DecideMany {
  repeated Alternatives alternatives = 1;
}

message Condition {
  enum CondType {
     APPEVENT = 1;
     EXTEVENT = 2;
  }
  required CondType condType = 1;
  optional AppEvent appEvent = 2;
  optional ExtEvent extEvent = 3;
}

message Alternatives {
  required Condition cond = 1;
  required EventTrace events = 2;
}